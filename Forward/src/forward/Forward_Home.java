/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forward;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.DefaultXYDataset;

/**
 *
 * @author dadab
 */
public class Forward_Home extends javax.swing.JFrame {

    /**
     * Creates new form Forward_Home
     */
    public Forward_Home() {

        initComponents();
    }
    public Double Nla;
    public Double Nca;
    public Double[][] matrix;
    public Double Nlb;
    public Double Ncb;
    public Double[][] matrix2;
    public Double Nlp;
    public Double Ncp;
    public Double[][] matrix3;
    public int i;
    public int j;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        texto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableP = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableB = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableA = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ncp = new javax.swing.JTextField();
        nla = new javax.swing.JTextField();
        nca = new javax.swing.JTextField();
        nlb = new javax.swing.JTextField();
        ncb = new javax.swing.JTextField();
        nlp = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        textp = new javax.swing.JTextField();
        texta = new javax.swing.JTextField();
        textb = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        POR = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        alfas = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jProgressBar2 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        texto.setBackground(new java.awt.Color(153, 0, 153));
        texto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoActionPerformed(evt);
            }
        });
        jPanel1.add(texto, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 374, 43));

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel3.setText("O");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        tableP.setBackground(new java.awt.Color(204, 102, 255));
        tableP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tableP);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, 160, 150));

        tableB.setBackground(new java.awt.Color(204, 102, 255));
        tableB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableB);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 110, 200, 180));

        tableA.setAutoCreateRowSorter(true);
        tableA.setBackground(new java.awt.Color(204, 102, 255));
        tableA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tableA);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 190, 180));

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel6.setText(" B");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 60, -1, -1));

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel8.setText(" ‚àè");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, -1, -1));

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel9.setText("A");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, -1, -1));
        jPanel1.add(ncp, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, 40, 30));

        nla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nlaActionPerformed(evt);
            }
        });
        jPanel1.add(nla, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 30, 30));
        jPanel1.add(nca, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 30, 30));
        jPanel1.add(nlb, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 40, 30));
        jPanel1.add(ncb, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, 40, 30));
        jPanel1.add(nlp, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 30, 30));

        jLabel1.setText("NL:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, 40));

        jLabel2.setText("NC:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 380, -1, 40));

        jLabel4.setText("NL:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, -1, 40));

        jLabel5.setText("NL:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 40));

        jLabel10.setText("NC:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, 40));

        jLabel11.setText("NC:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, -1, 40));
        jPanel1.add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 20, 250));

        textp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textpActionPerformed(evt);
            }
        });
        jPanel1.add(textp, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 460, 130, -1));

        texta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textaActionPerformed(evt);
            }
        });
        jPanel1.add(texta, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 228, 110, -1));

        textb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textbActionPerformed(evt);
            }
        });
        jPanel1.add(textb, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 110, -1));

        jButton1.setText("Add_B_");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, -1, -1));

        jButton2.setText("Add_A_");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 80, 20));

        jButton3.setText("Add_P_");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 720, 540));

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));

        POR.setBackground(new java.awt.Color(255, 255, 255));
        POR.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "P(O / Œª) ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        alfas.setColumns(20);
        alfas.setRows(5);
        alfas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Œ± ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jScrollPane4.setViewportView(alfas);

        jButton4.setText("Calcul");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Graph");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(POR, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(POR, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jButton4)
                .addGap(29, 29, 29)
                .addComponent(jButton5)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 60, 270, 540));
        getContentPane().add(jProgressBar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 50, 30, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoActionPerformed

    private void nlaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nlaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nlaActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked

        /*Double la=Double.valueOf(nla.getText());
        Double ca=Double.valueOf(nca.getText()); 
        DefaultTableModel modelA = (DefaultTableModel)tableA.getModel();
        for (int i = 0; i < ca; i++) {
              modelA.addColumn(" ");
        }*/

    }//GEN-LAST:event_jLabel9MouseClicked

    private void textpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textpActionPerformed

    private void textaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textaActionPerformed

    private void textbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textbActionPerformed
    int clickb = 0;
    ArrayList<Double> listmatrix2 = new ArrayList();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         Ncb = Double.valueOf(ncb.getText());
        Nlb = Double.valueOf(nlb.getText());
        matrix2 = new Double[Integer.parseInt(nlb.getText())][Integer.parseInt(ncb.getText())];
        // ArrayList<Integer> listmatrix=new ArrayList();
        if (clickb == 0) {
            i = 0;
            j = 0;
        }
        //System.out.println("//"+click);
        clickb++;
        System.out.println(">>" + clickb);

        DefaultTableModel model = new DefaultTableModel(matrix2.length, matrix2[0].length);
        if (clickb <= Ncb * Nlb) {
            listmatrix2.add(Double.valueOf(textb.getText()));
            System.out.println("==" + listmatrix2);
        } else {
            int u = 0;
            for (int ii = 0; ii < Nlb; ii++) {
                for (int jj = 0; jj < Ncb; jj++) {
                    //model.setValueAt(matrix[ii][jj], ii, jj);
                    model.setValueAt(listmatrix2.get(u), ii, jj);
                    u++;
                }
            }

            tableB.setModel(model);
        }
           /* DefaultTableModel modelBB = (DefaultTableModel) tableB.getModel(); 
            
            tableB.getColumnModel().getColumn(1).setIdentifier("Years");*/

    }//GEN-LAST:event_jButton1ActionPerformed
    int clickp = 0;
    ArrayList<Double> listmatrix3 = new ArrayList();
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Ncp = Double.valueOf(ncp.getText());
        Nlp = Double.valueOf(nlp.getText());
        matrix3 = new Double[Integer.parseInt(nlp.getText())][Integer.parseInt(ncp.getText())];

        if (clickp == 0) {
            i = 0;
            j = 0;
        }

        clickp++;
        System.out.println(">>" + clickp);

        DefaultTableModel model = new DefaultTableModel(matrix3.length, matrix3[0].length);
        if (clickp <= Ncp * Nlp) {
            listmatrix3.add(Double.valueOf(textp.getText()));
            System.out.println("==" + listmatrix3);
        } else {
            int u = 0;
            for (int ii = 0; ii < Nlp; ii++) {
                for (int jj = 0; jj < Ncp; jj++) {

                    model.setValueAt(listmatrix3.get(u), ii, jj);
                    u++;
                }
            }

            tableP.setModel(model);
        }


    }//GEN-LAST:event_jButton3ActionPerformed
    int click = 0;
    ArrayList<Double> listmatrix = new ArrayList();
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Nca = Double.valueOf(nca.getText());
        Nla = Double.valueOf(nla.getText());
        matrix = new Double[Integer.parseInt(nla.getText())][Integer.parseInt(nca.getText())];

        if (click == 0) {
            i = 0;
            j = 0;
        }

        click++;
        System.out.println(">>" + click);

        DefaultTableModel model = new DefaultTableModel(matrix.length, matrix[0].length);
        if (click <= Nca * Nla) {
            listmatrix.add(Double.valueOf(texta.getText()));
            System.out.println("==" + listmatrix);//049246773
        } else {
            int u = 0;
            for (int ii = 0; ii < Nla; ii++) {
                for (int jj = 0; jj < Nca; jj++) {

                    model.setValueAt(listmatrix.get(u), ii, jj);
                    u++;
                }
            }

            tableA.setModel(model);
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        DefaultTableModel modelp = (DefaultTableModel) tableP.getModel();
        DefaultTableModel modelb = (DefaultTableModel) tableB.getModel();
        DefaultTableModel modela = (DefaultTableModel) tableA.getModel();
        ArrayList<Double> malfa1 = new ArrayList();
        ArrayList<Double> malfa2 = new ArrayList();
        ArrayList<Double> po = new ArrayList();
        ArrayList<String> Olist = new ArrayList<String>();
        ArrayList<Integer> sel = new ArrayList<Integer>();
         ArrayList<Double> S = new ArrayList();
        Double vp;
        Double vb;
        int taill = 0;
        int fintaill = 0;
        String O = texto.getText();
        
        for (int h = 0; h < O.length(); h++) {
            if (O.charAt(h) == '-') {
                taill++;
            }
            if(O.charAt(h) == '0'){
                
                sel.add(0);
            }
             if(O.charAt(h) == '1'){
                
                sel.add(1);
            }
        }
       
        fintaill = taill + 1;
        System.out.println("Taille =" + fintaill);
        
        /* int index = 0;
               char o1=O.charAt(0);
               for (int k = 0; k < 10; k++) {
                  if(o1==O.charAt(k)){
                      index++;
                  }
        }
               index++;
               if(index != )*/
        Double ru;
        int n = 0;
        System.out.println(">>>>>>>>" + modelp.getRowCount());
        for (int k = 0; k < modelp.getRowCount(); k++) {
            vp = Double.valueOf(modelp.getValueAt(k, 0).toString());
            vb = Double.valueOf(modelb.getValueAt(k, sel.get(0)).toString());
            ru = vp * vb;
            //matrixalfa1[k][0]=ru;
            malfa1.add(ru);
        }

        alfas.append("Œ± 1 =" + malfa1.toString() + "\n");
        System.out.println(malfa1);
         Double s;
         Double sb=0.0;
         
         int y=1;
        for (int r = 2; r <= fintaill ; r++) {

            System.out.println("testig..." + r + ">>" + malfa1);
            for (int k = 0; k < modela.getColumnCount(); k++) {
                s = 0.0;
                
                for (int e = 0; e < malfa1.size(); e++) {
            
                    s = s + (malfa1.get(e) * Double.valueOf(modela.getValueAt(e, k).toString()));
                   
                }
                 S.add(s);
            } 
                 
                       
                  for (int g= 0; g < modelb.getRowCount(); g++) {
                      
                    sb=  S.get(g)*Double.valueOf(modelb.getValueAt(g, sel.get(y)).toString());
                    

                malfa2.add(sb);
                sb=0.0;
                  }
                 
                  y++;
              for (int rm = 0; rm < S.size(); rm++) {
                S.remove(S);
                S.removeAll(S);
            }
            System.out.println("testig22..." + r + ">>");
         
            alfas.append("Œ± " + r + "=" + malfa2 + "\n");
            if (r == fintaill) {
                for (int ii = 0; ii < malfa2.size(); ii++) {
                    po.add(malfa2.get(ii));
                }
            }
            System.out.println("testig3333..." + r + ">>");
            for (int rm = 0; rm < malfa1.size(); rm++) {
                malfa1.remove(rm);
                malfa1.removeAll(malfa1);
            }
            System.out.println("testig44..." + r + ">>");
            
            for (int ii = 0; ii < malfa2.size(); ii++) {
                malfa1.add(malfa2.get(ii));
            }
            for (int rmm = 0; rmm < malfa2.size(); rmm++) {
                malfa2.remove(rmm);
                malfa2.removeAll(malfa2);
            }
        }
        /* for (int ii = 0; ii < malfa2.size(); ii++) { 
                      po.add(malfa1.get(ii));
                   }*/

        Double sompo = 0.0;
        for (int ii = 0; ii < po.size(); ii++) {
            sompo = sompo + po.get(ii);
        }
        POR.setText(sompo.toString());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        double[] initialStateProbabilities;
        Double[][] transitionMatrix;
        double[][] emissionMatrix;
        initialStateProbabilities = new double[Integer.parseInt(nlp.getText())];
        transitionMatrix = new Double[Integer.parseInt(nla.getText())][Integer.parseInt(nca.getText())];
        emissionMatrix = new double[Integer.parseInt(nlb.getText())][Integer.parseInt(ncb.getText())];
        //int[] observations ;
        DefaultTableModel modelp = (DefaultTableModel) tableP.getModel();
        DefaultTableModel modelb = (DefaultTableModel) tableB.getModel();
        DefaultTableModel modela = (DefaultTableModel) tableA.getModel();
        for (int k = 0; k < modelp.getRowCount(); k++) {

            initialStateProbabilities[k] = Double.parseDouble(modelp.getValueAt(k, 0).toString());
        }

        for (int y = 0; y < modelb.getColumnCount(); y++) {
            for (int z = 0; z < modelb.getRowCount(); z++) {

                transitionMatrix[y][z] = Double.parseDouble(modelb.getValueAt(y, z).toString());
            }
        }

        for (int y = 0; y < modela.getColumnCount(); y++) {
            for (int z = 0; z < modela.getRowCount(); z++) {
                emissionMatrix[y][z] = Double.parseDouble(modela.getValueAt(y, z).toString());
            }
        }
        DataGraph dg = new DataGraph();
        dg.setEmissionMatrix(emissionMatrix);
        dg.setInitialStateProbabilities(initialStateProbabilities);
        dg.setTransitionMatrix(transitionMatrix);
        System.out.println("HH>>" + transitionMatrix[0][0]);

        ForwardAlgorithmGraph fg = new ForwardAlgorithmGraph(modela.getRowCount(), modelb.getColumnCount() - 1, initialStateProbabilities, transitionMatrix, emissionMatrix);

        // DataGraph dg=new DataGraph();
        int numStates2 = 2;//ligne
        int numObservations2 = 4;
        double[] initialStateProbabilities2 = dg.getInitialStateProbabilities();
        Double[][] transitionMatrix2 = matrix2;// dg.getTransitionMatrix();
        Double[][] emissionMatrix2 = matrix;//dg.getEmissionMatrix();
        int[] observations = {0, 0, 0,1 };
        ForwardAlgorithmGraph forward = new ForwardAlgorithmGraph(numStates2, numObservations2, initialStateProbabilities2, transitionMatrix2, emissionMatrix2);
        double[][] alpha = forward.computeForwardVariable(observations);
        double[] newArr;
        // Create a dataset for the alpha values
        DefaultXYDataset dataset = new DefaultXYDataset();
        for (int i = 0; i < numStates2; i++) {
            double[] values = Arrays.copyOfRange(alpha[i], 0, observations.length);

            // double[] convertToIntArray(int[] arr) {
            newArr = new double[observations.length];
            for (int w = 0; w < observations.length; w++) {
                newArr[w] = (double) observations[w];
            }
            //return newArr;
//}

            dataset.addSeries("State " + i, new double[][]{newArr, values});
            // dataset.addSeries("State " + i, new double[][]{observations, values});
        }

        // Create a line chart of the alpha values
        JFreeChart chart = ChartFactory.createXYLineChart("Forward Algorithm", "Time", "Alpha Values", dataset, PlotOrientation.VERTICAL, true, true, false);
        chart.setBackgroundPaint(Color.white);
        XYPlot plot = chart.getXYPlot();
        plot.setBackgroundPaint(Color.lightGray);
 
        // Add the chart to a frame and
        ChartFrame frame = new ChartFrame("Forward Algorithm", chart);
        frame.pack();
        frame.setVisible(true);


    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Forward_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Forward_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Forward_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Forward_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Forward_Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel POR;
    private javax.swing.JTextArea alfas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField nca;
    private javax.swing.JTextField ncb;
    private javax.swing.JTextField ncp;
    private javax.swing.JTextField nla;
    private javax.swing.JTextField nlb;
    private javax.swing.JTextField nlp;
    private static javax.swing.JTable tableA;
    private static javax.swing.JTable tableB;
    private static javax.swing.JTable tableP;
    private javax.swing.JTextField texta;
    private javax.swing.JTextField textb;
    private javax.swing.JTextField texto;
    private javax.swing.JTextField textp;
    // End of variables declaration//GEN-END:variables
}
