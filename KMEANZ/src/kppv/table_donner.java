/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package kppv;

import java.awt.Color;
import java.awt.Graphics;
import static java.lang.Math.pow;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dadab
 */
public class table_donner extends javax.swing.JFrame {

    /**
     * Creates new form table_donner
     */
    public table_donner() {
        initComponents();
        
    }
public int  rowselect;
public int i=0;
public int h=0;
 static  DefaultTableModel model;
  static  DefaultTableModel model2;
public static void addRowtotable (Object[] D_row){
         model =(DefaultTableModel) t.getModel();
            model.addRow(D_row);
        }
public static void addRowtotable2 (Object[] D_row){
         model2 =(DefaultTableModel) t2.getModel();
            model2.addRow(D_row);
        }
 public void clearTable()
{
   
    DefaultTableModel dtm = (DefaultTableModel) t.getModel();
dtm.setRowCount(0);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        t = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pancenter = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        printruslt = new javax.swing.JTextArea();
        x = new javax.swing.JTextField();
        y = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        x1 = new javax.swing.JTextField();
        y1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        t2 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kppv/images-1.png"))); // NOI18N
        jLabel10.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jLabel10.setMinimumSize(new java.awt.Dimension(15, 10));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setForeground(new java.awt.Color(0, 0, 255));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        t.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "X", "Y"
            }
        ));
        t.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(t);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 450, 220));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 90, 520));

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kppv/icons8_graph_40px_2.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 20, 40, 40));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kppv/icons8_play_60px.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 10, 60, 50));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 70));

        pancenter.setBackground(new java.awt.Color(204, 204, 255));
        pancenter.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        printruslt.setColumns(20);
        printruslt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        printruslt.setForeground(new java.awt.Color(0, 0, 204));
        printruslt.setRows(5);
        jScrollPane4.setViewportView(printruslt);

        jScrollPane3.setViewportView(jScrollPane4);

        pancenter.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 450, 260));
        pancenter.add(x, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 124, -1));
        pancenter.add(y, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 124, -1));

        jLabel2.setText("X");
        pancenter.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 20, -1));

        jLabel3.setText("Y");
        pancenter.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 18, 22));

        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pancenter.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 60, -1));

        jButton3.setText("ÙŽADD");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        pancenter.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 320, -1, -1));

        jButton2.setText("reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        pancenter.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 360, -1, -1));

        x1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x1ActionPerformed(evt);
            }
        });
        pancenter.add(x1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 260, 60, 40));

        y1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y1ActionPerformed(evt);
            }
        });
        pancenter.add(y1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 260, 60, 40));

        jLabel5.setText("Y");
        pancenter.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 240, 10, -1));

        jLabel6.setText("X");
        pancenter.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 240, -1, -1));

        t2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "x", "y"
            }
        ));
        jScrollPane2.setViewportView(t2);

        pancenter.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 60, 180, 170));

        jLabel4.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel4.setText("Center");
        pancenter.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 30, 80, -1));

        getContentPane().add(pancenter, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 870, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 h++;
   String xx= x.getText();
   String yy = y.getText();
   /*String xx1 = x1.getText();
   String yy1 = y1.getText();
   String clas = c.getText();*/
   //String fullN=GETFULLNAME.getText();
   int m=0;
     DefaultTableModel model = (DefaultTableModel)t.getModel();
   /*  if("".equals(xx)){
         x.setBackground(Color.red);
         m++;
     }else{
         x.setBackground(Color.white);
     }
     if("".equals(yy)){
         y.setBackground(Color.red);
         m++;
     }else{
         y.setBackground(Color.white);
     }
     if("".equals(xx1)){
         x1.setBackground(Color.red);
         m++;
     }else{
         x1.setBackground(Color.white);
     }
     if("".equals(yy1)){
         y1.setBackground(Color.red);
         m++;
     }else{
         y1.setBackground(Color.white);
     }
     if("".equals(clas)){
         c.setBackground(Color.red);
         m++;
     }else{
         c.setBackground(Color.white);
     }*/
   if(m==0){
   //addRowtotable(new Object []{ 55,4, 5 ,"g"});
     int select =t.getSelectedRow();
     //String d=(String) model.getValueAt(select, 0);
          // if (select>=0){
              // DB.update(GETFULLNAME.getText(),  Integer.parseInt(d));
             /* model.setValueAt(clas, select, 0);
              model.setValueAt(xx, select, 1);
              
               model.setValueAt(yy, select, 2);
               
                model.setValueAt(Math.sqrt(pow(Double.parseDouble(xx1)-Double.parseDouble(xx),2)+pow(Double.parseDouble(yy1)-Double.parseDouble(yy),2)), select, 3);*/
                 //model.setValueAt(Math.sqrt(pow(Double.parseDouble(xx1)-Double.parseDouble(xx),2)+pow(Double.parseDouble(yy1)-Double.parseDouble(yy),2)), select, 3);
          // }else{
              // Double d=getDistence(xx,yy,xx1,yy1);
               //System.out.println("d="+d);
              // Double xv=Double.parseDouble(xx1)-Double.parseDouble(xx);
              // Double yv= Double.parseDouble(yy1)-Double.parseDouble(yy);
               //System.out.println("d="+xv);
               //System.out.println("d2="+yv);
               //Math.sqrt((pow(xv,2))+(pow(yv,2)))
               addRowtotable(new Object []{xx, yy});
               x.setText(null);
               y.setText(null);
               //JOptionPane.showMessageDialog(this, "ERROR");
           //}
           i++;}else{
       JOptionPane.showMessageDialog(this,"write all data");
   }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void y1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y1ActionPerformed

    private void x1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
x1.setText(null);
y1.setText(null);// TODO add your handling code here:

    }//GEN-LAST:event_jButton2ActionPerformed
  
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
 new GraphicsTut();     
           
    }//GEN-LAST:event_jLabel1MouseClicked
protected void drawPoint(JPanel panel, int x, int y) {
    Graphics g = panel.getGraphics();
    g.setColor(Color.RED);
    g.fillOval(x, y, 5, 5);
    panel.setVisible(true);
}
    private void tMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tMouseClicked
    DefaultTableModel model = (DefaultTableModel)t.getModel();
     int selectedRowIndex =t.getSelectedRow();
    
//GETFULLNAME.setText(model.getValuAt(selectedRowIndex,1));
x1.setText(model.getValueAt(selectedRowIndex, 0).toString());
y1.setText(model.getValueAt(selectedRowIndex, 1).toString());
//c.setText(model.getValueAt(selectedRowIndex,0).toString());
 
    }//GEN-LAST:event_tMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 String xx2 = x1.getText();
   String yy2   = y1.getText();     
        
        // Double d=getDistence(xx,yy,xx1,yy1);
               //System.out.println("d="+d);
              
               //System.out.println("d="+xv);
               //System.out.println("d2="+yv);
               addRowtotable2(new Object []{ xx2, yy2});
               x.setText(null);
               y.setText(null);
               //JOptionPane.showMessag
x1.setText(null);
y1.setText(null);

    }//GEN-LAST:event_jButton3ActionPerformed
public class GraphicsTut extends JFrame{

 public GraphicsTut(){
  this.setTitle("Remember g for Graphics");
  this.setSize(1600,900);
  this.setBackground(Color.yellow);
  this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  this.setVisible(true);

 }
 public void paint(Graphics g){
  //g.setColor(Color.BLACK);
  //g.drawRect(40, 40, 30, 30);
  g.setColor(Color.RED);
  for (int r = 0; r < model.getRowCount(); r++) {
        int x =Integer.parseInt(model.getValueAt(r, 0).toString());
        int y =Integer.parseInt(model.getValueAt(r, 1).toString()); 
  g.fillOval(x*20, y*20, 30, 30);
  }
 }

//public static void main(String[] args){
 // new GraphicsTut();
  
 //}

}
    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
      int newcolumn=0;
        //  "newColumn"
 DefaultTableModel model2 = (DefaultTableModel)t2.getModel();
       List<DataPoint> dataPoints = new ArrayList<>();
       List<DataPoint> centrs= new ArrayList<>();
  for (int r = 0; r < model.getRowCount(); r++) {
        Double x =Double.valueOf(model.getValueAt(r, 0).toString());
        Double y =Double.valueOf(model.getValueAt(r, 1).toString()); 
    dataPoints.add(new DataPoint(x, y));
  }
  
  for (int i = 0; i < model2.getRowCount(); i++) {
      Double xc =Double.valueOf(model2.getValueAt(i, 0).toString());
        Double yc =Double.valueOf(model2.getValueAt(i, 1).toString()); 
        centrs.add(new DataPoint(xc, yc));
  }
  
  
  
  
  
   
        int numIterations = 10;
        int u=0;
        for (int i = 0; i < numIterations; i++) {
            Map<DataPoint, List<DataPoint>> clusters = new HashMap<>();
            for (DataPoint centroid : centrs) {
                
                clusters.put(centroid, new ArrayList<>());
                 //Syst
                 
            }
            
            for (DataPoint dataPoint : dataPoints) {
                double minDistance = Double.MAX_VALUE;
                DataPoint Ccentr = null;
                for (DataPoint centroid : centrs) {
                    double distance = dataPoint.distanceTo(centroid);
                    if (distance < minDistance) {
                        minDistance = distance;
                        Ccentr = centroid;
                    }
                }
                clusters.get(Ccentr).add(dataPoint);
            }
            for (DataPoint centr : centrs) {
                List<DataPoint> ldps = clusters.get(centr);
                if (!ldps.isEmpty()) {
                    double sumX = 0.0;
                    double sumY = 0.0;
                    for (DataPoint ldp : ldps) {
                        sumX += ldp.getX();
                        sumY += ldp.getY();
                    }
                    centr.setX(sumX / ldps.size());
                    centr.setY(sumY / ldps.size());
                }
            }
       // }
       
        // Print results
        for (DataPoint centr : centrs) {
            if(i==9){
            printruslt.append("(" + centr.getX() + ", " + centr.getY() + ")\n");
        
            printruslt.append("points converge de cette center est :\n");
            
            List<DataPoint> ldps = clusters.get(centr);
            
            for (DataPoint ldp : ldps) {
               
                printruslt.append("(" + ldp.getX() + ", " + ldp.getY() + ")\n");
            }
            }
        }
        }
    }//GEN-LAST:event_jLabel7MouseClicked
/*public void visiblepane(){
       pancenter.setVisible(false);
}*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(table_donner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(table_donner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(table_donner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(table_donner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new table_donner().setVisible(true);
                 
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel pancenter;
    private javax.swing.JTextArea printruslt;
    public static javax.swing.JTable t;
    public static javax.swing.JTable t2;
    private javax.swing.JTextField x;
    private javax.swing.JTextField x1;
    private javax.swing.JTextField y;
    private javax.swing.JTextField y1;
    // End of variables declaration//GEN-END:variables

    private Double getDistence(String xx,String yy,String xx1,String yy1) {
    return Math.sqrt(pow(Double.parseDouble(xx1)-Double.parseDouble(xx),2)+pow(Double.parseDouble(yy1)-Double.parseDouble(yy),2));
    }
}
